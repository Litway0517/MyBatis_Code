<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--
    targetRuntime: 执行生成的逆向工程的版本
    MyBatis3Simple: 生成基本的CRUD（清新简洁版）
    MyBatis3: 生成带条件的CRUD（奢华尊享版）
    -->
    <context id="DB2Tables" targetRuntime="MyBatis3Simple">
        <!-- 数据库的连接信息 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/mybatis_code"
                        userId="root"
                        password="root">
        </jdbcConnection>

        <!--
            JavaBean的生成策略
            targetPackage: 代码生成后的实体类的包
            targetProject: 代码生成后的路径
        -->
        <javaModelGenerator targetPackage="com.atguigu.mybatis.pojo" targetProject=".\src\main\java">
            <!--
                enableSubPackages: 是否使用子包: 即com.atguigu.mybatis.pojo中的 . 表示的是包的层数. 而不是文件夹的名字
                trimStrings: 去掉字符串前后的空格. 数据库的表的字段如果有空格那么就去掉, 然后对应反向生成实体类的属性名称.
            -->
            <property name="enableSubPackages" value="true" />
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!--
            SQL映射文件的生成策略
            enableSubPackages: 使用子包
            targetProject: 放到resources下面
        -->
        <sqlMapGenerator targetPackage="com.atguigu.mybatis.mapper"
                         targetProject=".\src\main\resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!-- Mapper接口的生成策略 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="com.atguigu.mybatis.mapper" targetProject=".\src\main\java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>


        <!-- 逆向分析的表 -->
        <!--
            tableName: 数据库中的表名
            domainObjectName: 实体类的名称

            只需要指定实体类的名字, 不需要指定接口名和映射文件名字

            tableName设置为*号，可以对应所有表，此时不写domainObjectName
            domainObjectName属性指定生成出来的实体类的类名
        -->
        <table tableName="t_emp" domainObjectName="Emp"/>
        <table tableName="t_dept" domainObjectName="Dept"/>
    </context>
</generatorConfiguration>
